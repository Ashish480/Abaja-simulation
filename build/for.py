# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rU6AlFjbT4CZW51zqrosiMf8w-08F5WG
"""

import numpy as np
import math

def create_dh_matrix(alpha, a, theta, d):
    # Indented the code block within the function definition
    return np.matrix([
        [np.cos(theta), -np.cos(alpha) * np.sin(theta), np.sin(alpha) * np.sin(theta), a * np.cos(theta)],
        [np.sin(theta), np.cos(alpha) * np.cos(theta), -np.sin(alpha) * np.cos(theta), a * np.sin(theta)],
        [0, np.sin(alpha), np.cos(alpha), d],
        [0, 0, 0, 1]
    ])

# Set print options for better readability
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})

# Main program
if __name__ == "__main__":
    d1 = 267
    d2 = 0
    d3 = 0
    d4 = 0
    d5 = 97
    # Real theta values are to be added with these default values and should be in radians
    theta1 = 0
    theta2 = -0.7749262
    theta3 = -0.577704
    theta4 = 1.35263
    theta5 = 0
    a1 = 0
    a2 = 289.48866
    a3 = 351.158796
    a4 = 76
    a5 = 0
    alpha1 = -math.pi / 2
    alpha2 = 0
    alpha3 = 0
    alpha4 = -math.pi / 2
    alpha5 = 0
    D1 = create_dh_matrix(alpha1, a1, theta1, d1)
    D2 = create_dh_matrix(alpha2, a2, theta2, d2)
    D3 = create_dh_matrix(alpha3, a3, theta3, d3)
    D4 = create_dh_matrix(alpha4, a4, theta4, d4)
    D5 = create_dh_matrix(alpha5, a5, theta5, d5)
    DHM  =  np.dot(np.dot(np.dot(np.dot(D1,  D2),  D3),  D4),  D5)
    pm = np.array([[0], [0], [0], [1]])
    pf = np.dot(DHM, pm)
    print("Result: \n", pf)